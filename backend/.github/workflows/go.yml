name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install golangci-lint
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

    - name: Lint
      run: golangci-lint run --timeout=5m

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install gosec
      run: go install github.com/securego/gosec/v2/cmd/gosec@latest

    - name: Run gosec
      run: gosec -exclude-dir=vendor ./...

  release:
    needs: [build, lint, security]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/crypto-bot-linux-amd64 ./cmd/backtest
        GOOS=darwin GOARCH=amd64 go build -o dist/crypto-bot-darwin-amd64 ./cmd/backtest
        GOOS=windows GOARCH=amd64 go build -o dist/crypto-bot-windows-amd64.exe ./cmd/backtest

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/crypto-bot-linux-amd64
          dist/crypto-bot-darwin-amd64
          dist/crypto-bot-windows-amd64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
