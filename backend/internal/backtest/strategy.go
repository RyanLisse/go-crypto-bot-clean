package backtest

import (
	"context"
	"time"

	"github.com/ryanlisse/go-crypto-bot/internal/domain/models"
)

// Signal represents a trading signal generated by a strategy
type Signal struct {
	Symbol    string
	Side      string
	Quantity  float64
	Price     float64
	Timestamp time.Time
	Reason    string
}

// BacktestStrategy defines the interface for strategies used in backtesting
type BacktestStrategy interface {
	// Initialize initializes the strategy with backtest-specific parameters
	Initialize(ctx context.Context, config map[string]interface{}) error

	// OnTick is called for each new data point (candle, ticker, etc.)
	OnTick(ctx context.Context, symbol string, timestamp time.Time, data interface{}) ([]*Signal, error)

	// OnOrderFilled is called when an order is filled during the backtest
	OnOrderFilled(ctx context.Context, order *models.Order) error

	// OnPositionClosed is called when a position is closed during the backtest
	OnPositionClosed(ctx context.Context, position *models.ClosedPosition) error
}

// BaseStrategy provides a base implementation of the BacktestStrategy interface
type BaseStrategy struct {
	Name   string
	Config map[string]interface{}
}

// Initialize initializes the strategy with backtest-specific parameters
func (s *BaseStrategy) Initialize(ctx context.Context, config map[string]interface{}) error {
	s.Config = config
	return nil
}

// OnTick is called for each new data point (candle, ticker, etc.)
func (s *BaseStrategy) OnTick(ctx context.Context, symbol string, timestamp time.Time, data interface{}) ([]*Signal, error) {
	// Base implementation returns no signals
	return nil, nil
}

// OnOrderFilled is called when an order is filled during the backtest
func (s *BaseStrategy) OnOrderFilled(ctx context.Context, order *models.Order) error {
	// Base implementation does nothing
	return nil
}

// OnPositionClosed is called when a position is closed during the backtest
func (s *BaseStrategy) OnPositionClosed(ctx context.Context, position *models.ClosedPosition) error {
	// Base implementation does nothing
	return nil
}
