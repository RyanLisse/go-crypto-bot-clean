package mocks

package mocks

import (
	model "github.com/RyanLisse/go-crypto-bot-clean/backend/internal/domain/model"
	mock "github.com/stretchr/testify/mock"
)

// EventBus is an autogenerated mock type for the EventBus type
type EventBus struct {
	mock.Mock
}

// Publish provides a mock function with given fields: event
func (_m *EventBus) Publish(event *model.NewCoinEvent) {
	_m.Called(event)
}

// Subscribe provides a mock function with given fields: listener
func (_m *EventBus) Subscribe(listener func(*model.NewCoinEvent)) {
	_m.Called(listener)
}

// Unsubscribe provides a mock function with given fields: listener
func (_m *EventBus) Unsubscribe(listener func(*model.NewCoinEvent)) {
	_m.Called(listener)
}

// NewEventBus creates a new instance of EventBus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventBus(t interface {
	mock.TestingT
	Cleanup(func())
}) *EventBus {
	mock := &EventBus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
