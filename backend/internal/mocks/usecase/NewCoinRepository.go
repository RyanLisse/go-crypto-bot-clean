package mocks

import mock "github.com/stretchr/testify/mock"

// NewCoinRepository is an autogenerated mock type for the NewCoinRepository type
type NewCoinRepository struct {
	mock.Mock
}

// IsProcessedForAutobuy provides a mock function with given fields: symbol
func (_m *NewCoinRepository) IsProcessedForAutobuy(symbol string) bool {
	ret := _m.Called(symbol)

	if len(ret) == 0 {
		panic("no return value specified for IsProcessedForAutobuy")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(symbol)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MarkAsProcessed provides a mock function with given fields: symbol
func (_m *NewCoinRepository) MarkAsProcessed(symbol string) error {
	ret := _m.Called(symbol)

	if len(ret) == 0 {
		panic("no return value specified for MarkAsProcessed")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(symbol)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewNewCoinRepository creates a new instance of NewCoinRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNewCoinRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *NewCoinRepository {
	mock := &NewCoinRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
