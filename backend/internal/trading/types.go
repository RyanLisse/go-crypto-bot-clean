package trading

import (
	"context"
	"time"

	"go-crypto-bot-clean/backend/internal/domain/models"
)

// Signal represents a trading signal generated by a strategy
type Signal struct {
	Symbol    string
	Side      models.OrderSide
	Quantity  float64
	Price     float64
	Timestamp time.Time
	Reason    string
}

// Strategy defines the interface for backtesting strategies
type Strategy interface {
	// Initialize sets up the strategy with any required configuration
	Initialize(ctx context.Context, config interface{}) error

	// OnTick processes a new tick of market data and returns any trading signals
	OnTick(ctx context.Context, symbol string, timestamp time.Time, data interface{}) ([]*Signal, error)

	// OnOrderFilled is called when an order has been filled
	OnOrderFilled(ctx context.Context, order *models.Order) error

	// ClosePositions is called at the end of backtesting to close any open positions
	ClosePositions(ctx context.Context) ([]*Signal, error)
}
