// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pkg/platform/mexc/websocket/proto/mexc.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MexcMessage represents the base message structure for MEXC WebSocket messages
type MexcMessage struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Channel  string                 `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Symbol   string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	DataType string                 `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*MexcMessage_Ping
	//	*MexcMessage_Pong
	//	*MexcMessage_SubscriptionResponse
	//	*MexcMessage_ErrorResponse
	//	*MexcMessage_TickerData
	//	*MexcMessage_KlineData
	//	*MexcMessage_OrderbookData
	//	*MexcMessage_TradeData
	//	*MexcMessage_NewListingData
	//	*MexcMessage_SymbolStatusData
	Data          isMexcMessage_Data `protobuf_oneof:"data"`
	Timestamp     int64              `protobuf:"varint,14,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MexcMessage) Reset() {
	*x = MexcMessage{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MexcMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MexcMessage) ProtoMessage() {}

func (x *MexcMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MexcMessage.ProtoReflect.Descriptor instead.
func (*MexcMessage) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{0}
}

func (x *MexcMessage) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *MexcMessage) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MexcMessage) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *MexcMessage) GetData() isMexcMessage_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MexcMessage) GetPing() *Ping {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *MexcMessage) GetPong() *Pong {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

func (x *MexcMessage) GetSubscriptionResponse() *SubscriptionResponse {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_SubscriptionResponse); ok {
			return x.SubscriptionResponse
		}
	}
	return nil
}

func (x *MexcMessage) GetErrorResponse() *ErrorResponse {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_ErrorResponse); ok {
			return x.ErrorResponse
		}
	}
	return nil
}

func (x *MexcMessage) GetTickerData() *TickerData {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_TickerData); ok {
			return x.TickerData
		}
	}
	return nil
}

func (x *MexcMessage) GetKlineData() *KlineData {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_KlineData); ok {
			return x.KlineData
		}
	}
	return nil
}

func (x *MexcMessage) GetOrderbookData() *OrderBookData {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_OrderbookData); ok {
			return x.OrderbookData
		}
	}
	return nil
}

func (x *MexcMessage) GetTradeData() *TradeData {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_TradeData); ok {
			return x.TradeData
		}
	}
	return nil
}

func (x *MexcMessage) GetNewListingData() *NewListingData {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_NewListingData); ok {
			return x.NewListingData
		}
	}
	return nil
}

func (x *MexcMessage) GetSymbolStatusData() *SymbolStatusData {
	if x != nil {
		if x, ok := x.Data.(*MexcMessage_SymbolStatusData); ok {
			return x.SymbolStatusData
		}
	}
	return nil
}

func (x *MexcMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type isMexcMessage_Data interface {
	isMexcMessage_Data()
}

type MexcMessage_Ping struct {
	Ping *Ping `protobuf:"bytes,4,opt,name=ping,proto3,oneof"`
}

type MexcMessage_Pong struct {
	Pong *Pong `protobuf:"bytes,5,opt,name=pong,proto3,oneof"`
}

type MexcMessage_SubscriptionResponse struct {
	SubscriptionResponse *SubscriptionResponse `protobuf:"bytes,6,opt,name=subscription_response,json=subscriptionResponse,proto3,oneof"`
}

type MexcMessage_ErrorResponse struct {
	ErrorResponse *ErrorResponse `protobuf:"bytes,7,opt,name=error_response,json=errorResponse,proto3,oneof"`
}

type MexcMessage_TickerData struct {
	TickerData *TickerData `protobuf:"bytes,8,opt,name=ticker_data,json=tickerData,proto3,oneof"`
}

type MexcMessage_KlineData struct {
	KlineData *KlineData `protobuf:"bytes,9,opt,name=kline_data,json=klineData,proto3,oneof"`
}

type MexcMessage_OrderbookData struct {
	OrderbookData *OrderBookData `protobuf:"bytes,10,opt,name=orderbook_data,json=orderbookData,proto3,oneof"`
}

type MexcMessage_TradeData struct {
	TradeData *TradeData `protobuf:"bytes,11,opt,name=trade_data,json=tradeData,proto3,oneof"`
}

type MexcMessage_NewListingData struct {
	NewListingData *NewListingData `protobuf:"bytes,12,opt,name=new_listing_data,json=newListingData,proto3,oneof"`
}

type MexcMessage_SymbolStatusData struct {
	SymbolStatusData *SymbolStatusData `protobuf:"bytes,13,opt,name=symbol_status_data,json=symbolStatusData,proto3,oneof"`
}

func (*MexcMessage_Ping) isMexcMessage_Data() {}

func (*MexcMessage_Pong) isMexcMessage_Data() {}

func (*MexcMessage_SubscriptionResponse) isMexcMessage_Data() {}

func (*MexcMessage_ErrorResponse) isMexcMessage_Data() {}

func (*MexcMessage_TickerData) isMexcMessage_Data() {}

func (*MexcMessage_KlineData) isMexcMessage_Data() {}

func (*MexcMessage_OrderbookData) isMexcMessage_Data() {}

func (*MexcMessage_TradeData) isMexcMessage_Data() {}

func (*MexcMessage_NewListingData) isMexcMessage_Data() {}

func (*MexcMessage_SymbolStatusData) isMexcMessage_Data() {}

// Ping message for heartbeat
type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{1}
}

func (x *Ping) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Pong response to ping
type Pong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{2}
}

func (x *Pong) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// SubscriptionResponse for subscription confirmations
type SubscriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channel       string                 `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionResponse) Reset() {
	*x = SubscriptionResponse{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionResponse) ProtoMessage() {}

func (x *SubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{3}
}

func (x *SubscriptionResponse) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SubscriptionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubscriptionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ErrorResponse for error messages
type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{4}
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// TickerData for ticker updates
type TickerData struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Symbol             string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	LastPrice          string                 `protobuf:"bytes,2,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	OpenPrice          string                 `protobuf:"bytes,3,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	HighPrice          string                 `protobuf:"bytes,4,opt,name=high_price,json=highPrice,proto3" json:"high_price,omitempty"`
	LowPrice           string                 `protobuf:"bytes,5,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`
	Volume             string                 `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	QuoteVolume        string                 `protobuf:"bytes,7,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	PriceChange        string                 `protobuf:"bytes,8,opt,name=price_change,json=priceChange,proto3" json:"price_change,omitempty"`
	PriceChangePercent string                 `protobuf:"bytes,9,opt,name=price_change_percent,json=priceChangePercent,proto3" json:"price_change_percent,omitempty"`
	BidPrice           string                 `protobuf:"bytes,10,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`
	AskPrice           string                 `protobuf:"bytes,11,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`
	Timestamp          int64                  `protobuf:"varint,12,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TickerData) Reset() {
	*x = TickerData{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerData) ProtoMessage() {}

func (x *TickerData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerData.ProtoReflect.Descriptor instead.
func (*TickerData) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{5}
}

func (x *TickerData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TickerData) GetLastPrice() string {
	if x != nil {
		return x.LastPrice
	}
	return ""
}

func (x *TickerData) GetOpenPrice() string {
	if x != nil {
		return x.OpenPrice
	}
	return ""
}

func (x *TickerData) GetHighPrice() string {
	if x != nil {
		return x.HighPrice
	}
	return ""
}

func (x *TickerData) GetLowPrice() string {
	if x != nil {
		return x.LowPrice
	}
	return ""
}

func (x *TickerData) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *TickerData) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

func (x *TickerData) GetPriceChange() string {
	if x != nil {
		return x.PriceChange
	}
	return ""
}

func (x *TickerData) GetPriceChangePercent() string {
	if x != nil {
		return x.PriceChangePercent
	}
	return ""
}

func (x *TickerData) GetBidPrice() string {
	if x != nil {
		return x.BidPrice
	}
	return ""
}

func (x *TickerData) GetAskPrice() string {
	if x != nil {
		return x.AskPrice
	}
	return ""
}

func (x *TickerData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// KlineData for candlestick data
type KlineData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Interval      string                 `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Klines        []*Kline               `protobuf:"bytes,3,rep,name=klines,proto3" json:"klines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KlineData) Reset() {
	*x = KlineData{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KlineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlineData) ProtoMessage() {}

func (x *KlineData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlineData.ProtoReflect.Descriptor instead.
func (*KlineData) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{6}
}

func (x *KlineData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *KlineData) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *KlineData) GetKlines() []*Kline {
	if x != nil {
		return x.Klines
	}
	return nil
}

// Kline represents a single candlestick
type Kline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpenTime      int64                  `protobuf:"varint,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	Open          string                 `protobuf:"bytes,2,opt,name=open,proto3" json:"open,omitempty"`
	High          string                 `protobuf:"bytes,3,opt,name=high,proto3" json:"high,omitempty"`
	Low           string                 `protobuf:"bytes,4,opt,name=low,proto3" json:"low,omitempty"`
	Close         string                 `protobuf:"bytes,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume        string                 `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	QuoteVolume   string                 `protobuf:"bytes,7,opt,name=quote_volume,json=quoteVolume,proto3" json:"quote_volume,omitempty"`
	CloseTime     int64                  `protobuf:"varint,8,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	Trades        int32                  `protobuf:"varint,9,opt,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Kline) Reset() {
	*x = Kline{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kline) ProtoMessage() {}

func (x *Kline) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kline.ProtoReflect.Descriptor instead.
func (*Kline) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{7}
}

func (x *Kline) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *Kline) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Kline) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Kline) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Kline) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Kline) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *Kline) GetQuoteVolume() string {
	if x != nil {
		return x.QuoteVolume
	}
	return ""
}

func (x *Kline) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Kline) GetTrades() int32 {
	if x != nil {
		return x.Trades
	}
	return 0
}

// OrderBookData for order book updates
type OrderBookData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Bids          []*PriceLevel          `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks          []*PriceLevel          `protobuf:"bytes,3,rep,name=asks,proto3" json:"asks,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookData) Reset() {
	*x = OrderBookData{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookData) ProtoMessage() {}

func (x *OrderBookData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookData.ProtoReflect.Descriptor instead.
func (*OrderBookData) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{8}
}

func (x *OrderBookData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *OrderBookData) GetBids() []*PriceLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBookData) GetAsks() []*PriceLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBookData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// PriceLevel represents a price level in the order book
type PriceLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         string                 `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      string                 `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceLevel) Reset() {
	*x = PriceLevel{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceLevel) ProtoMessage() {}

func (x *PriceLevel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceLevel.ProtoReflect.Descriptor instead.
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{9}
}

func (x *PriceLevel) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PriceLevel) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

// TradeData for trade updates
type TradeData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Trades        []*Trade               `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeData) Reset() {
	*x = TradeData{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeData) ProtoMessage() {}

func (x *TradeData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeData.ProtoReflect.Descriptor instead.
func (*TradeData) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{10}
}

func (x *TradeData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeData) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

// Trade represents a single trade
type Trade struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price         string                 `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      string                 `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	QuoteQuantity string                 `protobuf:"bytes,4,opt,name=quote_quantity,json=quoteQuantity,proto3" json:"quote_quantity,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsBuyerMaker  bool                   `protobuf:"varint,6,opt,name=is_buyer_maker,json=isBuyerMaker,proto3" json:"is_buyer_maker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{11}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Trade) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *Trade) GetQuoteQuantity() string {
	if x != nil {
		return x.QuoteQuantity
	}
	return ""
}

func (x *Trade) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Trade) GetIsBuyerMaker() bool {
	if x != nil {
		return x.IsBuyerMaker
	}
	return false
}

// NewListingData for new listing announcements
type NewListingData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Listings      []*NewListing          `protobuf:"bytes,1,rep,name=listings,proto3" json:"listings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewListingData) Reset() {
	*x = NewListingData{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewListingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewListingData) ProtoMessage() {}

func (x *NewListingData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewListingData.ProtoReflect.Descriptor instead.
func (*NewListingData) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{12}
}

func (x *NewListingData) GetListings() []*NewListing {
	if x != nil {
		return x.Listings
	}
	return nil
}

// NewListing represents a newly listed coin
type NewListing struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Symbol            string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	BaseAsset         string                 `protobuf:"bytes,2,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	QuoteAsset        string                 `protobuf:"bytes,3,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
	Status            string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ListingTime       int64                  `protobuf:"varint,5,opt,name=listing_time,json=listingTime,proto3" json:"listing_time,omitempty"`
	TradingTime       int64                  `protobuf:"varint,6,opt,name=trading_time,json=tradingTime,proto3" json:"trading_time,omitempty"`
	InitialPrice      string                 `protobuf:"bytes,7,opt,name=initial_price,json=initialPrice,proto3" json:"initial_price,omitempty"`
	PricePrecision    string                 `protobuf:"bytes,8,opt,name=price_precision,json=pricePrecision,proto3" json:"price_precision,omitempty"`
	QuantityPrecision string                 `protobuf:"bytes,9,opt,name=quantity_precision,json=quantityPrecision,proto3" json:"quantity_precision,omitempty"`
	MinQuantity       string                 `protobuf:"bytes,10,opt,name=min_quantity,json=minQuantity,proto3" json:"min_quantity,omitempty"`
	MaxQuantity       string                 `protobuf:"bytes,11,opt,name=max_quantity,json=maxQuantity,proto3" json:"max_quantity,omitempty"`
	MinNotional       string                 `protobuf:"bytes,12,opt,name=min_notional,json=minNotional,proto3" json:"min_notional,omitempty"`
	Tags              []string               `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	Description       string                 `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewListing) Reset() {
	*x = NewListing{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewListing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewListing) ProtoMessage() {}

func (x *NewListing) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewListing.ProtoReflect.Descriptor instead.
func (*NewListing) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{13}
}

func (x *NewListing) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NewListing) GetBaseAsset() string {
	if x != nil {
		return x.BaseAsset
	}
	return ""
}

func (x *NewListing) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

func (x *NewListing) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NewListing) GetListingTime() int64 {
	if x != nil {
		return x.ListingTime
	}
	return 0
}

func (x *NewListing) GetTradingTime() int64 {
	if x != nil {
		return x.TradingTime
	}
	return 0
}

func (x *NewListing) GetInitialPrice() string {
	if x != nil {
		return x.InitialPrice
	}
	return ""
}

func (x *NewListing) GetPricePrecision() string {
	if x != nil {
		return x.PricePrecision
	}
	return ""
}

func (x *NewListing) GetQuantityPrecision() string {
	if x != nil {
		return x.QuantityPrecision
	}
	return ""
}

func (x *NewListing) GetMinQuantity() string {
	if x != nil {
		return x.MinQuantity
	}
	return ""
}

func (x *NewListing) GetMaxQuantity() string {
	if x != nil {
		return x.MaxQuantity
	}
	return ""
}

func (x *NewListing) GetMinNotional() string {
	if x != nil {
		return x.MinNotional
	}
	return ""
}

func (x *NewListing) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *NewListing) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// SymbolStatusData for symbol status updates
type SymbolStatusData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OldStatus     string                 `protobuf:"bytes,2,opt,name=old_status,json=oldStatus,proto3" json:"old_status,omitempty"`
	NewStatus     string                 `protobuf:"bytes,3,opt,name=new_status,json=newStatus,proto3" json:"new_status,omitempty"`
	UpdateTime    int64                  `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolStatusData) Reset() {
	*x = SymbolStatusData{}
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolStatusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolStatusData) ProtoMessage() {}

func (x *SymbolStatusData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolStatusData.ProtoReflect.Descriptor instead.
func (*SymbolStatusData) Descriptor() ([]byte, []int) {
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP(), []int{14}
}

func (x *SymbolStatusData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SymbolStatusData) GetOldStatus() string {
	if x != nil {
		return x.OldStatus
	}
	return ""
}

func (x *SymbolStatusData) GetNewStatus() string {
	if x != nil {
		return x.NewStatus
	}
	return ""
}

func (x *SymbolStatusData) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SymbolStatusData) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_pkg_platform_mexc_websocket_proto_mexc_proto protoreflect.FileDescriptor

const file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDesc = "" +
	"\n" +
	",pkg/platform/mexc/websocket/proto/mexc.proto\x12\x04mexc\"\xb8\x05\n" +
	"\vMexcMessage\x12\x18\n" +
	"\achannel\x18\x01 \x01(\tR\achannel\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x1b\n" +
	"\tdata_type\x18\x03 \x01(\tR\bdataType\x12 \n" +
	"\x04ping\x18\x04 \x01(\v2\n" +
	".mexc.PingH\x00R\x04ping\x12 \n" +
	"\x04pong\x18\x05 \x01(\v2\n" +
	".mexc.PongH\x00R\x04pong\x12Q\n" +
	"\x15subscription_response\x18\x06 \x01(\v2\x1a.mexc.SubscriptionResponseH\x00R\x14subscriptionResponse\x12<\n" +
	"\x0eerror_response\x18\a \x01(\v2\x13.mexc.ErrorResponseH\x00R\rerrorResponse\x123\n" +
	"\vticker_data\x18\b \x01(\v2\x10.mexc.TickerDataH\x00R\n" +
	"tickerData\x120\n" +
	"\n" +
	"kline_data\x18\t \x01(\v2\x0f.mexc.KlineDataH\x00R\tklineData\x12<\n" +
	"\x0eorderbook_data\x18\n" +
	" \x01(\v2\x13.mexc.OrderBookDataH\x00R\rorderbookData\x120\n" +
	"\n" +
	"trade_data\x18\v \x01(\v2\x0f.mexc.TradeDataH\x00R\ttradeData\x12@\n" +
	"\x10new_listing_data\x18\f \x01(\v2\x14.mexc.NewListingDataH\x00R\x0enewListingData\x12F\n" +
	"\x12symbol_status_data\x18\r \x01(\v2\x16.mexc.SymbolStatusDataH\x00R\x10symbolStatusData\x12\x1c\n" +
	"\ttimestamp\x18\x0e \x01(\x03R\ttimestampB\x06\n" +
	"\x04data\"$\n" +
	"\x04Ping\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\"$\n" +
	"\x04Pong\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\"d\n" +
	"\x14SubscriptionResponse\x12\x18\n" +
	"\achannel\x18\x01 \x01(\tR\achannel\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"=\n" +
	"\rErrorResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x86\x03\n" +
	"\n" +
	"TickerData\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\n" +
	"last_price\x18\x02 \x01(\tR\tlastPrice\x12\x1d\n" +
	"\n" +
	"open_price\x18\x03 \x01(\tR\topenPrice\x12\x1d\n" +
	"\n" +
	"high_price\x18\x04 \x01(\tR\thighPrice\x12\x1b\n" +
	"\tlow_price\x18\x05 \x01(\tR\blowPrice\x12\x16\n" +
	"\x06volume\x18\x06 \x01(\tR\x06volume\x12!\n" +
	"\fquote_volume\x18\a \x01(\tR\vquoteVolume\x12!\n" +
	"\fprice_change\x18\b \x01(\tR\vpriceChange\x120\n" +
	"\x14price_change_percent\x18\t \x01(\tR\x12priceChangePercent\x12\x1b\n" +
	"\tbid_price\x18\n" +
	" \x01(\tR\bbidPrice\x12\x1b\n" +
	"\task_price\x18\v \x01(\tR\baskPrice\x12\x1c\n" +
	"\ttimestamp\x18\f \x01(\x03R\ttimestamp\"d\n" +
	"\tKlineData\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\binterval\x18\x02 \x01(\tR\binterval\x12#\n" +
	"\x06klines\x18\x03 \x03(\v2\v.mexc.KlineR\x06klines\"\xe6\x01\n" +
	"\x05Kline\x12\x1b\n" +
	"\topen_time\x18\x01 \x01(\x03R\bopenTime\x12\x12\n" +
	"\x04open\x18\x02 \x01(\tR\x04open\x12\x12\n" +
	"\x04high\x18\x03 \x01(\tR\x04high\x12\x10\n" +
	"\x03low\x18\x04 \x01(\tR\x03low\x12\x14\n" +
	"\x05close\x18\x05 \x01(\tR\x05close\x12\x16\n" +
	"\x06volume\x18\x06 \x01(\tR\x06volume\x12!\n" +
	"\fquote_volume\x18\a \x01(\tR\vquoteVolume\x12\x1d\n" +
	"\n" +
	"close_time\x18\b \x01(\x03R\tcloseTime\x12\x16\n" +
	"\x06trades\x18\t \x01(\x05R\x06trades\"\x91\x01\n" +
	"\rOrderBookData\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12$\n" +
	"\x04bids\x18\x02 \x03(\v2\x10.mexc.PriceLevelR\x04bids\x12$\n" +
	"\x04asks\x18\x03 \x03(\v2\x10.mexc.PriceLevelR\x04asks\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\">\n" +
	"\n" +
	"PriceLevel\x12\x14\n" +
	"\x05price\x18\x01 \x01(\tR\x05price\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\tR\bquantity\"H\n" +
	"\tTradeData\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12#\n" +
	"\x06trades\x18\x02 \x03(\v2\v.mexc.TradeR\x06trades\"\xb4\x01\n" +
	"\x05Trade\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05price\x18\x02 \x01(\tR\x05price\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\tR\bquantity\x12%\n" +
	"\x0equote_quantity\x18\x04 \x01(\tR\rquoteQuantity\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12$\n" +
	"\x0eis_buyer_maker\x18\x06 \x01(\bR\fisBuyerMaker\">\n" +
	"\x0eNewListingData\x12,\n" +
	"\blistings\x18\x01 \x03(\v2\x10.mexc.NewListingR\blistings\"\xde\x03\n" +
	"\n" +
	"NewListing\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\n" +
	"base_asset\x18\x02 \x01(\tR\tbaseAsset\x12\x1f\n" +
	"\vquote_asset\x18\x03 \x01(\tR\n" +
	"quoteAsset\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12!\n" +
	"\flisting_time\x18\x05 \x01(\x03R\vlistingTime\x12!\n" +
	"\ftrading_time\x18\x06 \x01(\x03R\vtradingTime\x12#\n" +
	"\rinitial_price\x18\a \x01(\tR\finitialPrice\x12'\n" +
	"\x0fprice_precision\x18\b \x01(\tR\x0epricePrecision\x12-\n" +
	"\x12quantity_precision\x18\t \x01(\tR\x11quantityPrecision\x12!\n" +
	"\fmin_quantity\x18\n" +
	" \x01(\tR\vminQuantity\x12!\n" +
	"\fmax_quantity\x18\v \x01(\tR\vmaxQuantity\x12!\n" +
	"\fmin_notional\x18\f \x01(\tR\vminNotional\x12\x12\n" +
	"\x04tags\x18\r \x03(\tR\x04tags\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\"\xa1\x01\n" +
	"\x10SymbolStatusData\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\n" +
	"old_status\x18\x02 \x01(\tR\toldStatus\x12\x1d\n" +
	"\n" +
	"new_status\x18\x03 \x01(\tR\tnewStatus\x12\x1f\n" +
	"\vupdate_time\x18\x04 \x01(\x03R\n" +
	"updateTime\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reasonBTZRgithub.com/RyanLisse/go-crypto-bot-clean/backend/pkg/platform/mexc/websocket/protob\x06proto3"

var (
	file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescOnce sync.Once
	file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescData []byte
)

func file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescGZIP() []byte {
	file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescOnce.Do(func() {
		file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDesc), len(file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDesc)))
	})
	return file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDescData
}

var file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_pkg_platform_mexc_websocket_proto_mexc_proto_goTypes = []any{
	(*MexcMessage)(nil),          // 0: mexc.MexcMessage
	(*Ping)(nil),                 // 1: mexc.Ping
	(*Pong)(nil),                 // 2: mexc.Pong
	(*SubscriptionResponse)(nil), // 3: mexc.SubscriptionResponse
	(*ErrorResponse)(nil),        // 4: mexc.ErrorResponse
	(*TickerData)(nil),           // 5: mexc.TickerData
	(*KlineData)(nil),            // 6: mexc.KlineData
	(*Kline)(nil),                // 7: mexc.Kline
	(*OrderBookData)(nil),        // 8: mexc.OrderBookData
	(*PriceLevel)(nil),           // 9: mexc.PriceLevel
	(*TradeData)(nil),            // 10: mexc.TradeData
	(*Trade)(nil),                // 11: mexc.Trade
	(*NewListingData)(nil),       // 12: mexc.NewListingData
	(*NewListing)(nil),           // 13: mexc.NewListing
	(*SymbolStatusData)(nil),     // 14: mexc.SymbolStatusData
}
var file_pkg_platform_mexc_websocket_proto_mexc_proto_depIdxs = []int32{
	1,  // 0: mexc.MexcMessage.ping:type_name -> mexc.Ping
	2,  // 1: mexc.MexcMessage.pong:type_name -> mexc.Pong
	3,  // 2: mexc.MexcMessage.subscription_response:type_name -> mexc.SubscriptionResponse
	4,  // 3: mexc.MexcMessage.error_response:type_name -> mexc.ErrorResponse
	5,  // 4: mexc.MexcMessage.ticker_data:type_name -> mexc.TickerData
	6,  // 5: mexc.MexcMessage.kline_data:type_name -> mexc.KlineData
	8,  // 6: mexc.MexcMessage.orderbook_data:type_name -> mexc.OrderBookData
	10, // 7: mexc.MexcMessage.trade_data:type_name -> mexc.TradeData
	12, // 8: mexc.MexcMessage.new_listing_data:type_name -> mexc.NewListingData
	14, // 9: mexc.MexcMessage.symbol_status_data:type_name -> mexc.SymbolStatusData
	7,  // 10: mexc.KlineData.klines:type_name -> mexc.Kline
	9,  // 11: mexc.OrderBookData.bids:type_name -> mexc.PriceLevel
	9,  // 12: mexc.OrderBookData.asks:type_name -> mexc.PriceLevel
	11, // 13: mexc.TradeData.trades:type_name -> mexc.Trade
	13, // 14: mexc.NewListingData.listings:type_name -> mexc.NewListing
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pkg_platform_mexc_websocket_proto_mexc_proto_init() }
func file_pkg_platform_mexc_websocket_proto_mexc_proto_init() {
	if File_pkg_platform_mexc_websocket_proto_mexc_proto != nil {
		return
	}
	file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes[0].OneofWrappers = []any{
		(*MexcMessage_Ping)(nil),
		(*MexcMessage_Pong)(nil),
		(*MexcMessage_SubscriptionResponse)(nil),
		(*MexcMessage_ErrorResponse)(nil),
		(*MexcMessage_TickerData)(nil),
		(*MexcMessage_KlineData)(nil),
		(*MexcMessage_OrderbookData)(nil),
		(*MexcMessage_TradeData)(nil),
		(*MexcMessage_NewListingData)(nil),
		(*MexcMessage_SymbolStatusData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDesc), len(file_pkg_platform_mexc_websocket_proto_mexc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_platform_mexc_websocket_proto_mexc_proto_goTypes,
		DependencyIndexes: file_pkg_platform_mexc_websocket_proto_mexc_proto_depIdxs,
		MessageInfos:      file_pkg_platform_mexc_websocket_proto_mexc_proto_msgTypes,
	}.Build()
	File_pkg_platform_mexc_websocket_proto_mexc_proto = out.File
	file_pkg_platform_mexc_websocket_proto_mexc_proto_goTypes = nil
	file_pkg_platform_mexc_websocket_proto_mexc_proto_depIdxs = nil
}
