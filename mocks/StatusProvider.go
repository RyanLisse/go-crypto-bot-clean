// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	status "command-line-arguments"

	mock "github.com/stretchr/testify/mock"
)

// StatusProvider is an autogenerated mock type for the StatusProvider type
type StatusProvider struct {
	mock.Mock
}

// GetNewCoinWatcher provides a mock function with no fields
func (_m *StatusProvider) GetNewCoinWatcher() status.WatcherStatus {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetNewCoinWatcher")
	}

	var r0 status.WatcherStatus
	if rf, ok := ret.Get(0).(func() status.WatcherStatus); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(status.WatcherStatus)
		}
	}

	return r0
}

// GetPositionMonitor provides a mock function with no fields
func (_m *StatusProvider) GetPositionMonitor() status.WatcherStatus {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPositionMonitor")
	}

	var r0 status.WatcherStatus
	if rf, ok := ret.Get(0).(func() status.WatcherStatus); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(status.WatcherStatus)
		}
	}

	return r0
}

// NewStatusProvider creates a new instance of StatusProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStatusProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *StatusProvider {
	mock := &StatusProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
